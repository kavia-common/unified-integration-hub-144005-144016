{"is_source_file": true, "format": "TypeScript", "description": "This file contains utility functions for fetching and handling connector statuses within a frontend application. It defines types for connector status data, and provides functions to fetch status for individual or multiple connectors, with fallback mechanisms.", "external_files": ["./api"], "external_methods": ["apiFetch"], "published": ["fetchConnectorStatus", "fetchAllConnectorStatuses", "ConnectorStatus", "ConnectorStatusMap"], "classes": [], "methods": [{"name": "export async function fetchConnectorStatus(connectorId: string): Promise<ConnectorStatus> { fetchConnectorStatus", "description": "Fetches the status of a single connector by its ID, first attempting to get detailed status and if that fails, inferring from the connectors list.", "scope": "", "scopeKind": ""}, {"name": "export async function fetchAllConnectorStatuses(connectorIds: string[]): Promise<ConnectorStatus/ fetchAllConnectorStatuses", "description": "Fetches statuses for multiple connectors either from a list endpoint or via individual status requests, returning a map of statuses keyed by connector ID.", "scope": "", "scopeKind": ""}], "calls": ["apiFetch<ConnectorStatus>(`/connectors/${encodeURIComponent(connectorId)}/status`, { method: 'GET', json: true })", "apiFetch<unknown>(`/connectors`, { method: 'GET', json: true })", "apiFetch<unknown>(`/connectors`, { method: 'GET', json: true })", "fetchConnectorStatus(cid)"], "search-terms": ["status", "connectors", "connectorId", "fetchConnectorStatus", "fetchAllConnectorStatuses", "connection status", "connector status map"], "state": 2, "file_id": 30, "knowledge_revision": 141, "git_revision": "", "revision_history": [{"132": ""}, {"140": ""}, {"141": ""}], "ctags": [{"_type": "tag", "name": "ConnectorStatus", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144016/unified_connector_frontend/src/utils/status.ts", "pattern": "/^export type ConnectorStatus = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "ConnectorStatusMap", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144016/unified_connector_frontend/src/utils/status.ts", "pattern": "/^export type ConnectorStatusMap = Record<string, ConnectorStatus>;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "cid", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144016/unified_connector_frontend/src/utils/status.ts", "pattern": "/^      for (const cid of connectorIds) {$/", "language": "TypeScript", "kind": "constant", "scope": "fetchAllConnectorStatuses", "scopeKind": "function"}, {"_type": "tag", "name": "cid", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144016/unified_connector_frontend/src/utils/status.ts", "pattern": "/^  for (const cid of connectorIds) {$/", "language": "TypeScript", "kind": "constant", "scope": "fetchAllConnectorStatuses", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144016/unified_connector_frontend/src/utils/status.ts", "pattern": "/^    const data = await apiFetch<ConnectorStatus>(`\\/connectors\\/${encodeURIComponent(connectorId/", "language": "TypeScript", "kind": "constant", "scope": "fetchConnectorStatus", "scopeKind": "function"}, {"_type": "tag", "name": "entry", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144016/unified_connector_frontend/src/utils/status.ts", "pattern": "/^        const entry = (list.find((it) => isConnector(it) && String(it.id) === cid) as ConnectorL/", "language": "TypeScript", "kind": "constant", "scope": "fetchAllConnectorStatuses", "scopeKind": "function"}, {"_type": "tag", "name": "fetchAllConnectorStatuses", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144016/unified_connector_frontend/src/utils/status.ts", "pattern": "/^export async function fetchAllConnectorStatuses(connectorIds: string[]): Promise<ConnectorStatus/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "fetchConnectorStatus", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144016/unified_connector_frontend/src/utils/status.ts", "pattern": "/^export async function fetchConnectorStatus(connectorId: string): Promise<ConnectorStatus> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "isConnector", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144016/unified_connector_frontend/src/utils/status.ts", "pattern": "/^      const isConnector = (it: unknown): it is ConnectorListShape =>$/", "language": "TypeScript", "kind": "constant", "scope": "fetchAllConnectorStatuses", "scopeKind": "function"}, {"_type": "tag", "name": "isConnector", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144016/unified_connector_frontend/src/utils/status.ts", "pattern": "/^    const isConnector = (it: unknown): it is ConnectorListShape =>$/", "language": "TypeScript", "kind": "constant", "scope": "fetchConnectorStatus", "scopeKind": "function"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144016/unified_connector_frontend/src/utils/status.ts", "pattern": "/^    const list = await apiFetch<unknown>(`\\/connectors`, { method: 'GET', json: true });$/", "language": "TypeScript", "kind": "constant", "scope": "fetchAllConnectorStatuses", "scopeKind": "function"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144016/unified_connector_frontend/src/utils/status.ts", "pattern": "/^    const list = await apiFetch<unknown>(`\\/connectors`, { method: 'GET', json: true });$/", "language": "TypeScript", "kind": "constant", "scope": "fetchConnectorStatus", "scopeKind": "function"}, {"_type": "tag", "name": "map", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144016/unified_connector_frontend/src/utils/status.ts", "pattern": "/^  const map: ConnectorStatusMap = {};$/", "language": "TypeScript", "kind": "constant", "scope": "fetchAllConnectorStatuses", "scopeKind": "function"}], "hash": "5883cda3daa749756c447edfc112237a", "format-version": 4, "code-base-name": "unified_connector_frontend", "filename": "unified_connector_frontend/src/utils/status.ts"}